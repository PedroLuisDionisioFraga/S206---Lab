{
	"info": {
		"_postman_id": "6218ef62-b8f2-4f7f-8263-784da740a8c5",
		"name": "Quality of Software (S206)",
		"description": "# Using Postman by CLI:\n\nDownload the library to Node.js\n\n``` shell\nnpm install -g newman\n\n ```\n\nGo to the folder that contain the file generated by POSTMAN with extension `postman_collection.json`.\n\nNow run the follow command with respective archive name\n\n``` shell\nnewman run .\\Lesson-01.postman_collection.json\n\n ```\n\n**NOTE**: The Envirionments was not exported together the Collections.\n\n# Using newman with HTML\n\nDownload the library to Node.js\n\n``` shell\nnpm install -g newman-reporter-htmlextra\n\n ```\n\nThe same file extension used in `newman` library will be the same in `newman-reporter-htmlextra`.\n\n``` shell\nnewman run .\\Lesson-01.postman_collection.json -r htmlextra\n\n ```\n\nNOTE: The `-r` param say that it going to send the report to htmlextra.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "35066282"
	},
	"item": [
		{
			"name": "Test",
			"item": [
				{
					"name": "GET",
					"item": [
						{
							"name": "Pokemon not Found",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://pokeapi.co/api/v2/pokemon/piplupee/",
									"protocol": "https",
									"host": [
										"pokeapi",
										"co"
									],
									"path": [
										"api",
										"v2",
										"pokemon",
										"piplupee",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Pokemon Found",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"ability\");\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"base_experience\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://pokeapi.co/api/v2/pokemon/piplup",
									"protocol": "https",
									"host": [
										"pokeapi",
										"co"
									],
									"path": [
										"api",
										"v2",
										"pokemon",
										"piplup"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get User ResReq",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://dummy.restapiexample.com/api/v1/employee/1",
									"protocol": "https",
									"host": [
										"dummy",
										"restapiexample",
										"com"
									],
									"path": [
										"api",
										"v1",
										"employee",
										"1"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "POST",
					"item": [
						{
							"name": "Create User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pedro\",\r\n    \"job\": \"leader\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://reqres.in/api/users",
									"protocol": "https",
									"host": [
										"reqres",
										"in"
									],
									"path": [
										"api",
										"users"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "DELETE",
					"item": [
						{
							"name": "Delete User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://reqres.in/api/users/2",
									"protocol": "https",
									"host": [
										"reqres",
										"in"
									],
									"path": [
										"api",
										"users",
										"2"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"description": "This folder contains my first test of S206"
		}
	]
}